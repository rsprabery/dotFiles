setw -g mode-keys vi
bind -n C-M-h select-pane -L
bind -n C-M-j select-pane -D
bind -n C-M-k select-pane -U
bind -n C-M-l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# act like GNU screen
unbind C-b
set -g prefix C-v

# -n means "no-prefix"
bind -n M-| split-window -h
bind -n M-D split-window

# in iterm2
# 0x22 0x6E next window
# 0x22 0x70 previous window

# look good
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"

setw -g mouse on
set -g mouse on

# Scroll History
set -g history-limit 50000

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

# Don't allow mouse highlights to access the clipboard
unbind -T copy-mode MouseDragEnd1Pane
unbind -T copy-mode-vi MouseDragEnd1Pane

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Allow sharing with vim buffers:
set -g focus-events on

# Ensure yank to clipboard is on.
set -g set-clipboard on

# Be able to use italics
# set -g default-terminal "tmux"

# smart pane switching with awareness of vim splits
# see: https://thoughtbot.com/blog/seamlessly-navigate-vim-and-tmux-splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf
